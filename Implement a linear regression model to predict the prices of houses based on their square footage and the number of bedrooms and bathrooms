import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Sample data - square footage, number of bedrooms, number of bathrooms, and prices
square_footage = np.array([1000, 1500, 1200, 1700, 900]).reshape(-1, 1)
bedrooms = np.array([2, 3, 2, 4, 1]).reshape(-1, 1)
bathrooms = np.array([1, 2, 1.5, 2.5, 1]).reshape(-1, 1)
prices = np.array([200000, 300000, 240000, 350000, 180000])

# Concatenate features
features = np.concatenate((square_footage, bedrooms, bathrooms), axis=1)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, prices, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
predictions = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
print("Mean Squared Error:", mse)

# Example prediction
example_house = np.array([1300, 3, 2]).reshape(1, -1)
predicted_price = model.predict(example_house)
print("Predicted price for the example house:", predicted_price[0])
